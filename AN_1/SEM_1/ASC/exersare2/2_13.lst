     1                                  ;Se dau un nume de fisier si un text (definite in segmentul de date). Textul contine litere mici, litere mari, cifre si caractere speciale. Sa se transforme toate literele mici din textul dat in litere mari. Sa se c
     2                                  
     3                                  bits 32
     4                                  global start
     5                                  extern exit,fclose,fprintf,fopen,printf,scanf
     6                                  import exit msvcrt.dll
     7                                  import fclose msvcrt.dll
     8                                  import fprintf msvcrt.dll
     9                                  import fopen msvcrt.dll
    10                                  import printf msvcrt.dll
    11                                  import scanf msvcrt.dll
    12                                  
    13                                  segment data use32 class=data
    14                                  
    15 00000000 31332E74787400          nume_fisier db "13.txt", 0
    16 00000007 7700                    mod_acces db "w", 0
    17 00000009 FFFFFFFF                descriptor dd -1
    18 0000000D 664142676438343F23-     text db "fABgd84?#", 0
    18 00000016 00                 
    19                                  len equ $-text-1
    20 00000017 00<rept>                text2 times len db 0
    21                                  
    22                                  segment code use32 class=code
    23                                  
    24                                  start:
    25                                          
    26 00000000 68[07000000]                push dword mod_acces
    27 00000005 68[00000000]                push dword nume_fisier
    28 0000000A FF15[00000000]              call [fopen]
    29 00000010 83C408                      add esp,4*2
    30 00000013 A3[09000000]                mov [descriptor],eax
    31                                      
    32 00000018 83F800                      cmp eax,0
    33 0000001B 7442                        je final
    34                                  
    35 0000001D B909000000                  mov ecx,len
    36 00000022 BF[17000000]                mov edi,text2
    37 00000027 BE[0D000000]                mov esi,text
    38                                      repeta:
    39 0000002C AC                              lodsb
    40 0000002D 3C61                            cmp al,'a'
    41 0000002F 7C08                                jl urm
    42 00000031 3C7A                            cmp al,'z'
    43 00000033 7F04                                jg urm
    44 00000035 B320                            mov bl,'a'-'A'
    45 00000037 28D8                            sub al,bl
    46                                          urm:
    47 00000039 AA                              stosb
    48 0000003A E2F0                        loop repeta
    49                                      
    50 0000003C 68[17000000]                push dword text2
    51 00000041 FF35[09000000]              push dword [descriptor]
    52 00000047 FF15[00000000]              call [fprintf]
    53 0000004D 83C408                      add esp,4*2
    54                                      
    55 00000050 FF35[09000000]              push dword [descriptor]
    56 00000056 FF15[00000000]              call [fclose]
    57 0000005C 83C404                      add esp,4*1
    58                                      
    59                                      final:
    60 0000005F 6A00                    push dword 0
    61 00000061 FF15[00000000]          call [exit]
