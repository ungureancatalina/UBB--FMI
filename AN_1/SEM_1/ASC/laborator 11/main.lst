     1                                  ; Se dau un sir care contine n reprezentari binare pe 8 biti date ca sir de caractere.
     2                                  ; Sa se obtina un sir care contine numerele corespunzatoare reprezentarilor binare.
     3                                  ; Exemplu:
     4                                  ; Se da: '10100111b', '01100011b', '110b', '101011b'
     5                                  ; Se stocheaza: 10100111b, 01100011b, 110b, 101011b
     6                                  
     7                                  bits 32 
     8                                  global start
     9                                  extern creare
    10                                  extern exit,printf
    11                                  import exit msvcrt.dll  
    12                                  import printf msvcrt.dll  
    13                                  
    14                                  segment data use32 class=data
    15 00000000 313031303031313162-         a db "10100111b","01100011b","110b","101011b", "2"
    15 00000009 303131303030313162-
    15 00000012 313130623130313031-
    15 0000001B 316232             
    16 0000001E 04000000                    n dd 4
    17 00000022 00000000                    numar dd 0
    18                                  
    19 00000026 536972756C20657374-         format db "Sirul este:",10, 13, 0
    19 0000002F 653A0A0D00         
    20 00000034 25782000                    format2 db "%x ",0
    21                                    
    22                                  segment code use32 class=code
    23                                  
    24                                  start:
    25                                      ;in ecx se pune numarul n de reprezentari binare
    26 00000000 8B0D[1E000000]              mov ecx,[n]
    27 00000006 BE[00000000]                mov esi, a
    28                                      
    29                                      ;se afiseaza primul mesaj
    30 0000000B 68[26000000]                push dword format
    31 00000010 FF15[00000000]              call [printf]
    32 00000016 83C404                      add esp,4
    33                                      
    34                                      ;se repeta pana cand ecx e 0
    35                                      repeta:
    36 00000019 E34F                            jecxz final
    37                                          
    38                                          ;se pune ecx pe stiva pentru a nu se modifica si se initializeaza cu 8(nr de biti)
    39 0000001B 51                              push ecx
    40 0000001C B908000000                      mov ecx, 8
    41                                          repeta2:
    42                                              
    43 00000021 D125[22000000]                      shl dword [numar], 1
    44                                              
    45                                              ;apeleaza tranforma pentru a pune in edi cifra corespunzatoare caracterului din esi
    46 00000027 FF30                                push dword [eax]
    47 00000029 E8(00000000)                        call creare
    48 0000002E 83C404                              add esp,4
    49                                              
    50                                              ;pune in numarul numar cifra
    51 00000031 3C01                                cmp al, 1
    52 00000033 7507                                jne dupa
    53 00000035 8305[22000000]01                        add dword [numar], 1
    54                                              dupa:
    55                                             
    56                                              ;daca caracterul este b iese din loop pt a citi urmatorul sir
    57 0000003C 803E62                              cmp byte [esi],'b'
    58 0000003F 7402                                je afara
    59                                              
    60 00000041 E2DE                            loop repeta2
    61                                          afara:
    62                                          
    63                                          ;sare peste caracterul b
    64 00000043 46                              inc esi
    65                                          
    66                                          ;se afiseaza numarul creat
    67 00000044 FF35[22000000]                      push dword [numar]
    68 0000004A 68[34000000]                        push format2
    69 0000004F FF15[00000000]                      call [printf]
    70 00000055 83C408                              add esp,4*2
    71                                          
    72                                          ;se scoate de pe stiva ecx
    73 00000058 59                              pop ecx
    74                                          
    75                                          ;reinitializam numar cu 0
    76 00000059 C705[22000000]0000-             mov dword [numar], 0
    76 00000061 0000               
    77                                          
    78                                          ; daca s-a ajuns la caracterul 2 iese din loop
    79 00000063 803E32                          cmp byte [esi],'2'
    80 00000066 7402                                je final
    81                                          
    82 00000068 E2AF                        loop repeta
    83                                      final:
    84                                  
    85 0000006A 6A00                    push dword 0 
    86 0000006C FF15[00000000]          call [exit] 
    87                                      
