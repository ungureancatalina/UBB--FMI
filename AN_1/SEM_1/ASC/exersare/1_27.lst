     1                                  ;Se dÄƒ un sir de caractere (definit in segmentul de date). SÄƒ se citeascÄƒ de la tastaturÄƒ un caracter, sÄƒ se determine numÄƒrul de apariÅ£ii al acelui caracter Ã®n ÅŸirul dat ÅŸi sÄƒ se afiÅŸeze acel caracter Ã
     2                                  
     3                                  bits 32
     4                                  global start
     5                                  extern exit,printf,scanf
     6                                  import exit msvcrt.dll
     7                                  import printf msvcrt.dll
     8                                  import scanf msvcrt.dll
     9                                  
    10                                  segment data use32 class=data
    11                                  
    12 00000000 610000006200000063-     sir dd 'a','b','c','a','b','c','a','b','a'
    12 00000009 000000610000006200-
    12 00000012 000063000000610000-
    12 0000001B 006200000061000000 
    13                                  len equ $-sir
    14 00000024 00000000                nr dd 0
    15 00000028 <res 00000004>          c resd 1
    16 0000002C 256300                  format1 db "%c", 0
    17 0000002F 636172616374657275-     mesaj1 db "caracterul este ", 0
    17 00000038 6C20657374652000   
    18 00000040 61706172697469693D-     format2 db "aparitii= %d, caracter= %c", 0
    18 00000049 2025642C2063617261-
    18 00000052 637465723D20256300 
    19                                  
    20                                  segment code use32 class=code
    21                                  
    22                                  start:
    23                                          
    24 00000000 68[2F000000]                push dword mesaj1
    25 00000005 FF15[00000000]              call [printf]
    26 0000000B 83C404                      add esp,4*1   
    27                                          
    28 0000000E 68[28000000]                push dword c
    29 00000013 68[2C000000]                push dword format1
    30 00000018 FF15[00000000]              call [scanf]
    31 0000001E 83C408                      add esp,4*2
    32                                      
    33 00000021 BE[00000000]                mov esi,sir
    34 00000026 8B1D[28000000]              mov ebx,[c]
    35 0000002C B924000000                  mov ecx,len
    36                                      repeta:
    37 00000031 B800000000                      mov eax,0
    38 00000036 AC                              lodsb
    39 00000037 39D8                            cmp eax,ebx
    40 00000039 7506                            jne dupa
    41 0000003B FF05[24000000]                      inc dword [nr]
    42                                          dupa:
    43 00000041 E2EE                        loop repeta
    44                                          
    45 00000043 FF35[28000000]              push dword [c]
    46 00000049 FF35[24000000]              push dword [nr]
    47 0000004F 68[40000000]                push dword format2
    48 00000054 FF15[00000000]              call [printf]
    49 0000005A 83C40C                      add esp,4*3
    50                                      
    51 0000005D 6A00                    push dword 0
    52 0000005F FF15[00000000]          call [exit]
