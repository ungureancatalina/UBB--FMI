     1                                  bits 32 
     2                                  global start
     3                                  extern exit 
     4                                  import exit msvcrt.dll 
     5                                  segment data use32 class=data
     6                                  ;calculati x/2+100*(a+b)-3/(c+d)+e*e; a,c-word, b,d-byte, e-doubleword, x-qword - Interpretare fara semn
     7                                  
     8 00000000 0A00                    a dw 10
     9 00000002 02                      b db 2
    10 00000003 0700                    c dw 7
    11 00000005 05                      d db 5
    12 00000006 15000000                e dd 21
    13 0000000A 0C00000000000000        x dq 12
    14                                  
    15                                  segment code use32 class=code
    16                                  start:
    17                                  
    18                                  ;x/2
    19 00000000 A1[0A000000]            mov eax, [x]
    20 00000005 8B15[0E000000]          mov edx, [x+4]
    21 0000000B B900000000              mov ecx,0
    22 00000010 B102                    mov cl, 2
    23 00000012 F7F1                    div ecx
    24 00000014 89C1                    mov ecx,eax
    25                                      
    26                                  ;a+b
    27 00000016 66BB0000                mov bx, 0
    28 0000001A 8A1D[02000000]          mov bl, [b]
    29 00000020 66031D[00000000]        add bx, [a]
    30                                  
    31                                  ;100*(a+b)
    32 00000027 66B80000                mov ax, 0
    33 0000002B 6689D8                  mov ax, bx
    34 0000002E 66BA6400                mov dx, 100
    35 00000032 66F7E2                  mul dx
    36                                  
    37                                  ;x/2+100*(a+b)
    38 00000035 01C1                    add ecx,eax
    39                                  
    40                                  ;(c+d)
    41 00000037 66BB0000                mov bx,0
    42 0000003B 8A1D[05000000]          mov bl, [d]
    43 00000041 66031D[03000000]        add bx, [c]
    44                                   
    45                                    
    46                                  ;3/(c+d)
    47 00000048 66B80300                mov ax, 3
    48 0000004C 66F7F3                  div bx
    49                                    
    50                                  ;x/2+100*(a+b)-3/(c+d)
    51 0000004F BA00000000              mov edx, 0
    52 00000054 6689C2                  mov dx,ax
    53 00000057 29D1                    sub ecx,edx
    54                                  
    55                                  ;e*e
    56 00000059 A1[06000000]            mov eax, [e]
    57 0000005E F725[06000000]          mul dword [e]
    58                                  
    59                                  ;x/2+100*(a+b)-3/(c+d)+e*e
    60 00000064 01C8                    add eax,ecx
    61 00000066 83D200                  adc edx, 0
    62                                    
    63 00000069 6A00                    push dword 0 
    64 0000006B FF15[00000000]          call [exit] 
