plugins {
  id 'java'
  id 'application'
  id 'org.javamodularity.moduleplugin' version '1.8.12'
  id 'org.openjfx.javafxplugin' version '0.0.13'
  id 'org.beryx.jlink' version '2.25.0'
}

group = 'ro.mpp'
version = '1.0-SNAPSHOT'

repositories {
  mavenCentral()
}

ext {
  junitVersion = '5.10.2'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}


dependencies {
  implementation 'org.openjfx:javafx-controls:17.0.6'
  implementation 'org.openjfx:javafx-fxml:17.0.6'

  implementation 'org.apache.logging.log4j:log4j-api:2.17.1'
  implementation 'org.apache.logging.log4j:log4j-core:2.17.1'
  implementation 'org.xerial:sqlite-jdbc:3.49.1.0'
  implementation group: 'com.google.guava', name: 'guava', version: '32.0.1-android'
//  testImplementation platform('org.junit:junit-bom:5.10.0')
//  testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

javafx {
  version = '17.0.6'
  modules = ['javafx.controls', 'javafx.fxml']
}

application {
  mainClass = 'ro.mpp.labfx.Main'
  mainModule= 'ro.mpp.labfx'
}

jar {
  duplicatesStrategy = DuplicatesStrategy.EXCLUDE
  manifest {
    attributes('Main-Class': 'ro.mpp.labfx.Main')
  }
  from {
    configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
  }
}

test {
  useJUnitPlatform()
}


jlink {
  imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
  options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
  launcher {
    name = 'app'
  }
}

jlinkZip {
  group = 'distribution'
}

run {
  jvmArgs = [
              "--add-modules", "javafx.controls,javafx.fxml"
  ]
}